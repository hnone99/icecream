// IE 하위브라우저 지원
@mixin ie-support{
  // IE8 미만
  @if $legacy-support-for-ie8 {
    .lt-ie8 &{
      // #{$property}: $values
      @content;
    }
  }
  // IE7 미만
  @if $legacy-support-for-ie7 {
    .lt-ie7 &{
      // #{$property}: $values
      @content;
    }
  }
}

// 모바일 지원
@mixin ios-support {
  @if $mobile-support-iOS {
    @content;
  }
}
@mixin android-support {
  @if $mobile-support-android {
    @content;
  }
}
// ios/android 포함
@mixin mobile-support {
  @if $mobile-support {
    @content;
  }
  @include ios-support {
  }
  @include android-support {
  }
}

// ie6,7 padding bug
// .lt-ie6 input, .lt-ie6 button, .lt-ie7 input, .lt-ie7 button
//   overflow: visible

// // $browser-minimum-versions: ('ie': "7")

// @mixin padding-bug{
//   @if for-legacy-browser("ie", "8"){
//    .lt-ie8 & {
//       @content;
//      }
//   }
// }


@mixin font-size($values: $base-size){
  @each $value in $values{
    @if type-of($value) == number and not unitless($value) and (unit($value) == "%"){
      @include rem(font-size, 1.6rem);
    }@else if type-of($value) == (unit($value) == "px"){
      @include x-rem(16px, font-size);
    }
  }
}

@mixin word-break {
  @if $word-break {
    //단어별 띄어쓰기
    word-break: keep-all;
  }
  @else {
     //단어별 띄어쓰기 안함
    word-break: break-all;
  }
}


@mixin ellipsis-auto($max-width: 100px){
  overflow: hidden;
  width: auto;
  max-width: $max-width;
  @extend %ellipsis;
}

@mixin table-support {
  @if $table-support {
  	@content;
  }
}

@mixin placeholder-support {
  @if $placeholder-support {
    @content;
  }
}

@mixin select-support {
  @if $select-support {
    @content;
  }
}



// custom row padding size
@mixin make-custom-row($name:12 ,$gutter-width:12) {
  .row-#{$name} {
    $_half:( $gutter-width / 2 );

    margin-left:- $_half; margin-right:- $_half;
    > [class^=col] {padding-left:$_half; padding-right:$_half;}
    &.row-y{
      margin-top: - $_half;margin-bottom: - $_half;
      > [class^=col]{padding-top:$_half; padding-bottom:$_half;}
    }
  }
}

// custom row padding size
@include make-custom-row(0, 0px);
@include make-custom-row(5, 5px);
@include make-custom-row(10, 10px);
@include make-custom-row(15, 15px);
@include make-custom-row(20, 20px);
@include make-custom-row(30, 30px);


/**
  px값 List를 만들어주는 함수입니다.
*/
@function size($start, $end) {
  $size : ();
  @for $i from $start through $end {
      $value : $i + 0;
      $size : append($size, $value);
  }
  @return $size;
}

/**
값이 0일때는 0으로, 그 외에는 'px'을 붙여줍니다.
ex) 0 => 0, 10 => 10px
*/
@function getPx($value) {
  @if $value == 0 {
      @return $value;
  } @else {
      @return $value + 0px;
  }
}

/**
px 값입니다.
0 ~ 100px 까지 조정하게 만들었습니다.
*/
$size : size(0, 100);

/**
margin과 padding의 각 위치를 지정해주는 map 입니다.
key는 class이름 생성시 쓰이며 value는 상세 속성 정의시 쓰입니다.
*/
$position : ('l':'left', 'r':'right', 't':'top', 'b':'bottom');

/**
margin과 padding 생성을 위한 map입니다.
key는 class이름 생성시 쓰이며 value는 상세 속성 정의시 쓰입니다.
*/
$nameMap : ('m-':'margin', 'p-':'padding');
/**
실제 css class를 만들어주는 mixin입니다.
nameMap, position, size를 혼합하여 아래와 같은 형식으로 만들어줍니다.

ex>
m-0 : { margin : 0; }
m-t-1 : { margin-top : 1px; }
*/
@mixin generate($nameMap : (), $position : (), $size : ()) {
  @each $preKey, $preValue in $nameMap {
      @each $px in $size {
          .#{$preKey}-#{$px} {
              #{$preValue} : getPx($px) !important;
          }
          @each $sufKey, $sufValue in $position {
              .#{$preKey}#{$sufKey}-#{$px} {
                  #{$preValue}-#{$sufValue} : getPx($px) !important;
              }
          }
      }
  }
}
@include generate($nameMap, $position, 5);
@include generate($nameMap, $position, 6);
@include generate($nameMap, $position, 10);
@include generate($nameMap, $position, 15);
@include generate($nameMap, $position, 20);
@include generate($nameMap, $position, 25);
@include generate($nameMap, $position, 30);